INFO Loaded configuration from D:\django_project\deepseekdjango\django_pymetrics_crs_end\config\pymetrics_config.json
Creating test database for alias 'default'...

Found 79 test(s).
System check identified no issues (0 silenced).
EINFO Agent event_logger initialized with config: {}
INFO Agent metric_extractor initialized with config: {}
INFO Agent trait_inferencer initialized with config: {}
INFO Agent report_generator initialized with config: {}
EINFO Agent event_logger initialized with config: {}
EINFO Agent event_logger initialized with config: {}
EINFO Agent event_logger initialized with config: {}
EINFO Agent event_logger initialized with config: {}
EINFO Agent metric_extractor initialized with config: {}
EINFO Agent metric_extractor initialized with config: {}
EINFO Agent metric_extractor initialized with config: {}
EINFO Agent report_generator initialized with config: {}
EINFO Agent report_generator initialized with config: {}
EINFO Agent report_generator initialized with config: {}
EINFO Agent trait_inferencer initialized with config: {}
EINFO Agent trait_inferencer initialized with config: {}
EINFO Agent trait_inferencer initialized with config: {}
E..WARNING Forbidden: /api/sessions/
.WARNING Bad Request: /api/sessions/
.WARNING Bad Request: /api/sessions/
.WARNING Not Found: /api/sessions/99999/
.EEEEEEEEEEEEEEEEWARNING Could not load config file C:\Users\MSI\AppData\Local\Temp\tmpmv63cf4y.json: Expecting value: line 1 column 1 (char 0)
INFO Updated parameter bart_population_mean_pumps: 30.5 -> 32.0
INFO Configuration saved to C:\Users\MSI\AppData\Local\Temp\tmpmv63cf4y.json
INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmpmv63cf4y.json
.WARNING Could not load config file C:\Users\MSI\AppData\Local\Temp\tmpuvbmu0d3.json: Expecting value: line 1 column 1 (char 0)
WARNING Could not load config file C:\Users\MSI\AppData\Local\Temp\tmpuvbmu0d3.json: Expecting value: line 1 column 1 (char 0)
.WARNING Could not load config file C:\Users\MSI\AppData\Local\Temp\tmpea7l4vo2.json: Expecting value: line 1 column 1 (char 0)
.......ERROR Invalid value 100.0 for parameter bart_population_mean_pumps
.INFO Updated parameter bart_population_mean_pumps: 30.5 -> 35.0
ERROR Invalid value 100.0 for parameter bart_population_mean_pumps
...INFO Updated trait configuration for test_trait
..INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmppe0k8_h_.json
.INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmpeqbds541.json
.INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmp195izmgy.json
INFO Configuration exported to C:\Users\MSI\AppData\Local\Temp\tmptmsf7hgi.json
INFO Loaded configuration from D:\django_project\deepseekdjango\django_pymetrics_crs_end\config\pymetrics_config.json
INFO Configuration saved to D:\django_project\deepseekdjango\django_pymetrics_crs_end\config\pymetrics_config.json
INFO Configuration imported from C:\Users\MSI\AppData\Local\Temp\tmptmsf7hgi.json
FINFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmp7_2n5d6v.json
FINFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmpkjwspy69.json
.INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmpy8tzxm1i.json
FINFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmp5qzprx47.json
INFO Configuration saved to C:\Users\MSI\AppData\Local\Temp\tmp5qzprx47.json
INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmp5qzprx47.json
.INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmpohi7xh81.json
.INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmphgt1fge_.json
.INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmpfnqmz95o.json
.INFO Loaded configuration from C:\Users\MSI\AppData\Local\Temp\tmpnlmcbb_w.json
.......EEEEEEEEEE
======================================================================
ERROR: tests.test_trait_inference_api (unittest.loader._FailedTest.tests.test_trait_inference_api)
----------------------------------------------------------------------
ImportError: Failed to import test module: tests.test_trait_inference_api
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\unittest\loader.py", line 407, in _find_test_path
    module = self._get_module_from_name(name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\unittest\loader.py", line 350, in _get_module_from_name
    __import__(name)
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_inference_api.py", line 1, in <module>
    import pytest
ModuleNotFoundError: No module named 'pytest'


======================================================================
ERROR: test_complete_workflow (tests.test_agents.TestAgentIntegration.test_complete_workflow)
Test complete workflow from event logging to report generation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'integration_test_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 516, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'integration_test_user'.

======================================================================
ERROR: test_batch_event_logging (tests.test_agents.TestEventLogger.test_batch_event_logging)
Test batch logging of multiple events.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_123'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 32, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_123'.

======================================================================
ERROR: test_log_event_invalid_session (tests.test_agents.TestEventLogger.test_log_event_invalid_session)
Test logging an event with invalid session ID.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_123'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 32, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_123'.

======================================================================
ERROR: test_log_invalid_event_missing_required_field (tests.test_agents.TestEventLogger.test_log_invalid_event_missing_required_field)
Test logging an event with missing required fields.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_123'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 32, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_123'.

======================================================================
ERROR: test_log_valid_balloon_risk_event (tests.test_agents.TestEventLogger.test_log_valid_balloon_risk_event)
Test logging a valid balloon risk event.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_123'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 32, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_123'.

======================================================================
ERROR: test_batch_metric_extraction (tests.test_agents.TestMetricExtractor.test_batch_metric_extraction)
Test batch extraction of metrics for multiple sessions.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_metrics'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 128, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_metrics'.

======================================================================
ERROR: test_extract_balloon_risk_metrics (tests.test_agents.TestMetricExtractor.test_extract_balloon_risk_metrics)
Test extraction of balloon risk metrics.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_metrics'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 128, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_metrics'.

======================================================================
ERROR: test_extract_metrics_insufficient_data (tests.test_agents.TestMetricExtractor.test_extract_metrics_insufficient_data)
Test metric extraction with insufficient data.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_metrics'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 128, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_metrics'.

======================================================================
ERROR: test_generate_comparative_report (tests.test_agents.TestReportGenerator.test_generate_comparative_report)
Test generation of comparative report.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_reports'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 395, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_reports'.

======================================================================
ERROR: test_generate_report_no_traits (tests.test_agents.TestReportGenerator.test_generate_report_no_traits)
Test report generation for session without trait profiles.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_reports'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 395, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_reports'.

======================================================================
ERROR: test_generate_session_report (tests.test_agents.TestReportGenerator.test_generate_session_report)
Test generation of session report.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_reports'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 395, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_reports'.

======================================================================
ERROR: test_infer_session_traits (tests.test_agents.TestTraitInferencer.test_infer_session_traits)
Test trait inference for a session.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_traits'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 277, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_traits'.

======================================================================
ERROR: test_infer_traits_insufficient_metrics (tests.test_agents.TestTraitInferencer.test_infer_traits_insufficient_metrics)
Test trait inference with insufficient metrics.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_traits'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 277, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_traits'.

======================================================================
ERROR: test_validate_trait_profile (tests.test_agents.TestTraitInferencer.test_validate_trait_profile)
Test trait profile validation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_user_traits'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_agents.py", line 277, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_user_traits'.

======================================================================
ERROR: test_bulk_session_listing_performance (tests.test_api.TestAPIPerformance.test_bulk_session_listing_performance)
Test performance of listing many sessions.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'perf_user_0'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 519, in setUp
    self._create_bulk_test_data()
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 534, in _create_bulk_test_data
    BehavioralSession.objects.bulk_create(sessions)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 816, in bulk_create
    returned_columns = self._batched_insert(
                       ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1873, in _batched_insert
    self._insert(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'perf_user_0'.

======================================================================
ERROR: test_pagination_functionality (tests.test_api.TestAPIPerformance.test_pagination_functionality)
Test API pagination functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'perf_user_0'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 519, in setUp
    self._create_bulk_test_data()
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 534, in _create_bulk_test_data
    BehavioralSession.objects.bulk_create(sessions)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 816, in bulk_create
    returned_columns = self._batched_insert(
                       ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1873, in _batched_insert
    self._insert(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'perf_user_0'.

======================================================================
ERROR: test_create_behavioral_event (tests.test_api.TestBehavioralDataAPI.test_create_behavioral_event)
Test creating behavioral events via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'api_test_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 41, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'api_test_user'.

======================================================================
ERROR: test_create_behavioral_session (tests.test_api.TestBehavioralDataAPI.test_create_behavioral_session)
Test creating a new behavioral session via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'api_test_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 41, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'api_test_user'.

======================================================================
ERROR: test_create_invalid_behavioral_event (tests.test_api.TestBehavioralDataAPI.test_create_invalid_behavioral_event)
Test creating invalid behavioral event via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'api_test_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 41, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'api_test_user'.

======================================================================
ERROR: test_list_behavioral_events (tests.test_api.TestBehavioralDataAPI.test_list_behavioral_events)
Test listing behavioral events via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'api_test_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 41, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'api_test_user'.

======================================================================
ERROR: test_list_behavioral_sessions (tests.test_api.TestBehavioralDataAPI.test_list_behavioral_sessions)
Test listing behavioral sessions via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'api_test_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 41, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'api_test_user'.

======================================================================
ERROR: test_retrieve_behavioral_session (tests.test_api.TestBehavioralDataAPI.test_retrieve_behavioral_session)
Test retrieving a specific behavioral session via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'api_test_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 41, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'api_test_user'.

======================================================================
ERROR: test_extract_metrics_api (tests.test_api.TestMetricExtractionAPI.test_extract_metrics_api)
Test metric extraction via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'metric_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 160, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'metric_api_user'.

======================================================================
ERROR: test_extract_metrics_invalid_session (tests.test_api.TestMetricExtractionAPI.test_extract_metrics_invalid_session)
Test metric extraction with invalid session ID.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'metric_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 160, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'metric_api_user'.

======================================================================
ERROR: test_list_behavioral_metrics (tests.test_api.TestMetricExtractionAPI.test_list_behavioral_metrics)
Test listing behavioral metrics via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'metric_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 160, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'metric_api_user'.

======================================================================
ERROR: test_generate_report_api (tests.test_api.TestReportGenerationAPI.test_generate_report_api)
Test report generation via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'report_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 356, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'report_api_user'.

======================================================================
ERROR: test_generate_report_invalid_session (tests.test_api.TestReportGenerationAPI.test_generate_report_invalid_session)
Test report generation with invalid session ID.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'report_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 356, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'report_api_user'.

======================================================================
ERROR: test_create_trait_profile (tests.test_api.TestTraitInferenceAPI.test_create_trait_profile)
Test creating trait profile via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'trait_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 251, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'trait_api_user'.

======================================================================
ERROR: test_infer_traits_api (tests.test_api.TestTraitInferenceAPI.test_infer_traits_api)
Test trait inference via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'trait_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 251, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'trait_api_user'.

======================================================================
ERROR: test_list_trait_profiles (tests.test_api.TestTraitInferenceAPI.test_list_trait_profiles)
Test listing trait profiles via API.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'trait_api_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_api.py", line 251, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'trait_api_user'.

======================================================================
ERROR: test_map_session_traits_comprehensive (tests.test_trait_mapping.TestTraitMapper.test_map_session_traits_comprehensive)
Test comprehensive trait mapping for a session.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_trait_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 34, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_trait_user'.

======================================================================
ERROR: test_map_traits_insufficient_metrics (tests.test_trait_mapping.TestTraitMapper.test_map_traits_insufficient_metrics)
Test trait mapping with insufficient metrics.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_trait_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 34, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_trait_user'.

======================================================================
ERROR: test_normalization_methods (tests.test_trait_mapping.TestTraitMapper.test_normalization_methods)
Test different normalization methods.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_trait_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 34, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_trait_user'.

======================================================================
ERROR: test_trait_explanation_generation (tests.test_trait_mapping.TestTraitMapper.test_trait_explanation_generation)
Test generation of trait explanations.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_trait_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 34, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_trait_user'.

======================================================================
ERROR: test_weight_functions (tests.test_trait_mapping.TestTraitMapper.test_weight_functions)
Test different weight functions.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2112, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'test_trait_user'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 34, in setUp
    self.test_session = BehavioralSession.objects.create(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 1845, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1822, in execute_sql
    for sql, params in self.as_sql():
                       ^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1745, in as_sql
    value_rows = [
                 ^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1746, in <listcomp>
    [
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1747, in <listcomp>
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\sql\compiler.py", line 1686, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\related.py", line 1149, in get_db_prep_save
    return self.target_field.get_db_prep_save(value, connection=connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 1019, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2801, in get_db_prep_value
    value = self.get_prep_value(value)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\fields\__init__.py", line 2114, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'test_trait_user'.

======================================================================
ERROR: test_outlier_detection (tests.test_trait_mapping.TestTraitValidation.test_outlier_detection)
Test outlier detection in metrics.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 381, in setUp
    self._create_validation_test_data()
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 389, in _create_validation_test_data
    BalloonRiskEvent.objects.create(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 675, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: BalloonRiskEvent() got unexpected keyword arguments: 'action', 'reaction_time_ms', 'event_id'

======================================================================
ERROR: test_temporal_stability_validation (tests.test_trait_mapping.TestTraitValidation.test_temporal_stability_validation)
Test temporal stability validation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 381, in setUp
    self._create_validation_test_data()
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 389, in _create_validation_test_data
    BalloonRiskEvent.objects.create(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 675, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: BalloonRiskEvent() got unexpected keyword arguments: 'action', 'reaction_time_ms', 'event_id'

======================================================================
ERROR: test_validate_low_quality_data (tests.test_trait_mapping.TestTraitValidation.test_validate_low_quality_data)
Test validation with low quality data.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 381, in setUp
    self._create_validation_test_data()
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 389, in _create_validation_test_data
    BalloonRiskEvent.objects.create(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 675, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: BalloonRiskEvent() got unexpected keyword arguments: 'action', 'reaction_time_ms', 'event_id'

======================================================================
ERROR: test_validate_trait_profile_comprehensive (tests.test_trait_mapping.TestTraitValidation.test_validate_trait_profile_comprehensive)
Test comprehensive trait profile validation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 381, in setUp
    self._create_validation_test_data()
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 389, in _create_validation_test_data
    BalloonRiskEvent.objects.create(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 675, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: BalloonRiskEvent() got unexpected keyword arguments: 'action', 'reaction_time_ms', 'event_id'

======================================================================
ERROR: test_validation_summary (tests.test_trait_mapping.TestTraitValidation.test_validation_summary)
Test validation summary functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 381, in setUp
    self._create_validation_test_data()
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_trait_mapping.py", line 389, in _create_validation_test_data
    BalloonRiskEvent.objects.create(
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\query.py", line 675, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MSI\miniconda3\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: BalloonRiskEvent() got unexpected keyword arguments: 'action', 'reaction_time_ms', 'event_id'

======================================================================
FAIL: test_export_import_configuration (tests.test_config.TestSettingsManager.test_export_import_configuration)
Test exporting and importing configuration.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_config.py", line 217, in test_export_import_configuration
    self.assertEqual(
AssertionError: 180 != 365

======================================================================
FAIL: test_get_nested_configuration_values (tests.test_config.TestSettingsManager.test_get_nested_configuration_values)
Test getting nested configuration values using dot notation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_config.py", line 90, in test_get_nested_configuration_values
    self.assertIsNone(
AssertionError: 'default_value' is not None

======================================================================
FAIL: test_load_configuration_from_file (tests.test_config.TestSettingsManager.test_load_configuration_from_file)
Test loading configuration from file.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\django_project\deepseekdjango\django_pymetrics_crs_end\tests\test_config.py", line 64, in test_load_configuration_from_file
    self.assertEqual(
AssertionError: 180 != 365

----------------------------------------------------------------------
Ran 79 tests in 5.149s

FAILED (failures=3, errors=41)
Destroying test database for alias 'default'...

